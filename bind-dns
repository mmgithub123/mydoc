记录存储：
一种是允许外部进程在服务器运行的时候更新zone文件；
　　另外一种是将zone中的资源记录RR存储在数据库中，每次查找zone中记录的时候动态读取；
  ----------------------------------------------------------------------------------------
  config
  
  最大缓存
  Server memory must be sufficient to hold both the cache and the zones loaded from disk. 
  The max-cache-size option can limit the amount of memory used by the cache
  
  不使用缓存
   // Do not allow access to cache
    allow-query-cache { none; };
    
    allow-recursion（recursion no;）  allow-query-cache  allow-query  

recursion no; // Do not provide recursive service =〉相当于 allow-recursion { none; };
Note that setting recursion no does not prevent clients from getting data from the server’s cache
it only prevents new data from being cached as an effect of client queries。
 If recursion is off and the server does not already know the answer, it returns a referral response. 

allow-query-cache { none; }; // Do not allow access to cache

Note that disallowing recursive queries for a host does not prevent the host from retrieving data
that is already in the server’s cache.

因此在 BIND 9.4 版本中，如果想禁止用户的递归查询请求，还需要将 allow-query-cache 选项关闭，
否则用户仍然可能在cache中查到数据。
    
    recursion - 递归查询处理
yes - 服务器将会做出所有能回答查询请求的工作（默认）
off - 如果服务器不知道答案，它将返回一个推荐（referral）响应
no - 捕获租住用户从服务器的缓存中得到数据，它仅仅阻止新数据作为查询的结果被缓存
  
  ----------------------------------------------------------------------------------------
  use
  常见状态：
  nxdoamin    访问域名不存在
nxrrset   请求的记录类型不存在，比如你请求AAAA
referral  向权威服务器请求的域名不是自己的域名，返回根线索
refused    拒绝访问
timeout  超时
success 解析成功
  
------------------------------------------------------------------------------------------
By default BIND will install in /usr/local and place files in these subdirectories of it:

sbin - named and all the system administrative tools associated with BIND such as rndc, dnssec-keygen, named-checkconf etc..
bin - tools for non-admin users - you'll find dig, host and nsupdate here
lib - object code libraries
share - (and various subdirectories) BIND's man pages
include - C header files
In addition, BIND compiled with no change to the default directories will expect to use the following directories (relative to /)

/etc - configuration files (such as named.conf, rndc.conf)
/var/run - run-time files created and used by named

log位置  统一看配置文件
-----------------------------------------------------------------------------

install and use

..yum install bind bind-utils
2,You're now ready to run named as a background daemon. Before launching it, 
it's a good idea to set up the default options for the management tool rndc.
..rndc-confgen -a
3,start
..systemctl start named
..netstat -nlp

----------------------------------------------------------

best Practices  ：
https://kb.isc.org/docs/bind-best-practices-authoritative
https://kb.isc.org/docs/bind-best-practices-recursive

1，Run BIND on a server dedicated to DNS only
2，Run separate authoritative and recursive DNS servers
3，Choose appropriate software and hardware

Take basic security measures
Run BIND as an unprivileged user.
To open low-numbered UDP and TCP ports BIND must be launched as root, but an alternate uid can be specified using the -u command line argument; 
after opening needed resources named will change its runtime uid to an unprivileged account.

Monitor the service
Put in place monitoring scripts to continually check health of servers and alert if conditions change substantially.

Conditions to monitor include:

process presence
CPU utilization
memory usage
network throughput and buffering (inbound/outbound)
filesystem utilization (on the log filesystem and also the filesystem containing the named working directory)
---------------------------------------------------------------------------------------------------------------------

tool：
dig, host,  nslookup ,dnstop
named-checkconf，named-checkzone，named-compilezone

类型：
1、主DNS服务器
　　　　为客户端提供域名解析的主要区域，主DNS服务器宕机，会启用从DNS服务器提供服务。
　　2、从DNS服务器
　　　　主服务器DNS长期无应答，从服务器也会停止提供服务。
　　　　主从区域之间的同步采用周期性检查+通知的机制，从服务器周期性的检查主服务器上的记录情况，一旦发现修改就会同步，另外主服务器上如果有数据被修改了，会立即通知从服务器更新记录。
　　3、缓存服务器
　　　　服务器本身不提供解析区域，只提供非权威应答。
　　4、转发服务器
　　　　当DNS服务器的解析区域（包括缓存）中无法为当前的请求提供权威应答时，将请求转发至其它的DNS服务器，此时本地DNS服务器就是转发服务器。
    Forwarding occurs only on those queries for which the server is not authoritative and does not have the answer in its cache.
    
    DNS的主要作用是进行主机名的解析。解析：根据用户提供一种名称，去查询解析库，以得到另一种名称。 正向解析与反向解析使用不同的解析库。

　　资源记录：rr(resource record)，有类型的概念；用于此记录解析的属性。

A：Address地址 IPv4
AAAA：Address地址 IPv6
NS：Name Server域名服务器
SOA：Start of Authority授权状态
MX：Mail Exchanger邮件交换
CNAME：Canonical Name规范名
PTR：Pointer指针

--------------------------------------------------------------------------------------------
dns实际使用中，即用递归查询，又使用迭代查询
查询顺序，1、本地hosts文件
　　　2、本地DNS缓存
　　　3、本地DNS服务器
　　　4、发起迭代查询
   The length of time for which a record may be retained in the cache of a caching name server is controlled 
   by the Time-To-Live (TTL) field associated with each resource record
   
   authoritative   权威服务
   recursive       递归服务
   To improve performance, recursive servers cache the results of the lookups they perform
   
   
   DNS协议使用udp/tcp的53端口提供服务，客户端向DNS服务发起请求时，使用udp的53端口；DNS服务器间进行区域传送的时候使用TCP的53端口。
   ---------------------------------------------------------------------------
   配置使用：
    cat /var/named/test.com.Zone 
$TTL 1D
@       IN SOA  @ rname.invalid. (
                                        0       ; serial
                                        1D      ; refresh
                                        1H      ; retry
                                        1W      ; expire
                                        3H )    ; minimum
        NS      @
        A       127.0.0.1
        AAAA    ::1
www     IN A    109.63.5.4
   
   -------------------------------------------------------------------------------------------------
   stress testing：
   DNS Latency is the #1 “Key Performance Indicator” (KPI) for a DNS system’s success
   tool：
https://github.com/DNS-OARC/flamethrower
https://github.com/cobblau/dnsperf

https://kb.isc.org/docs/aa-00561

基准：
https://github.com/cleanbrowsing/dnsperftest

bind 自带queryperf压测
https://blog.51cto.com/wubinary/1379595
wget  https://downloads.isc.org/isc/bind9/cur/9.11/bind-9.11.32.tar.gz
tar -zxvf bind-9.11.32.tar.gz
cd contrib/queryperf
./configure
make
cp queryperf /usr/bin
queryperf --help
queryperf -d  input-file.txt  -l 100


The output of queryperf is mostly self-explanatory.  Pay attention to
the number of dropped packets reported - when running the test over a
local Ethernet connection, it should be zero.  If one or more packets
has been dropped, there may be a problem with the network connection.
In that case, the results should be considered suspect and the test
repeated.

并发：同时向系统请求处理的数量

吞吐量：
qps  
   
响应时间：
最大响应时间
平均响应时间

有效请求

机器利用率

1秒=1000毫秒(ms) 1秒=1,000,000 微秒(μs) 

CPU总核数 = 物理CPU个数 * 每颗物理CPU的核数
总逻辑CPU数 = 物理CPU个数 * 每颗物理CPU的核数 * 超线程数

负载：
Load Average是 CPU的Load，它所包含的信息不是CPU的使用率状况，而是在一段时间内CPU正在处理以及等待CPU处理的进程数之和的统计信息，也就是CPU使用队列的长度的统计信息。
多核处理器中，你的Load Average不应该高于处理器核心的总数量。
平均负载是指上一分钟同时处于就绪状态的平均进程数。在CPU中可以理解为CPU可以并行处理的任务数量，就是CPU个数X核数
有些任务不能被及时分配处理器，那要保证性能的话，最好要小于CPU个数X核数X0.7。
Load Average会有3个状态平均值，分别是1分钟、5分钟和15分钟平均Load。

对于cpu负载的理解，首先需要搞清楚下面几个问题：

1）系统load高不一定是性能有问题。
因为Load高也许是因为在进行cpu密集型的计算

2）系统Load高不一定是CPU能力问题或数量不够。
因为Load高只是代表需要运行的队列累计过多了。但队列中的任务实际可能是耗Cpu的，也可能是耗i/0奶子其他因素的。

3）系统长期Load高，解决办法不是一味地首先增加CPU
因为Load只是表象，不是实质。增加CPU个别情况下会临时看到Load下降，但治标不治本。

4）在Load average 高的情况下需要鉴别系统瓶颈到底是CPU不足，还是io不够快造成或是内存不足造成的。
—


queryperf -d bind-input.txt -l 300

  -q specifies the maximum number of queries outstanding (default: 20) 并发数  20
-l     specifies how a limit for how long to run tests in seconds                  压测持续时间


并发
20       

吞吐量
88000  qps

系统吞吐量要素
一个系统的吞吐量（承压能力）与request（请求）对cpu的消耗，外部接口，IO等等紧密关联。
单个request 对cpu消耗越高，外部系统接口，IO影响速度越慢，系统吞吐能力越低，反之越高。

QPS(TPS)=并发数/平均响应时间

一个系统吞吐量通常有QPS(TPS),并发数两个因素决定，每套系统这个两个值都有一个相对极限值，在应用场景访问压力下，只要某一项达到系统最高值，
系统吞吐量就上不去了，如果压力继续增大，系统的吞吐量反而会下降，原因是系统超负荷工作，上下文切换，内存等等其他消耗导致系统性能下降。

我们在做系统设计的时候就需要考虑CPU运算，IO，外部系统响应因素造成的影响以及对系统性能的初步预估。
而通常情况下，我们面对需求，我们评估出来的出来QPS，并发数之外，还有另外一个维度：日pv。
通过观察系统的访问日志发现，在用户量很大的情况下，各个时间周期内的同一时间段的访问流量几乎一样。比如工作日的每天早上。只要能拿到日流量图和QPS我们就可以推算日流量。
通常的技术方法：
1、找出系统的最高TPS和日PV，这两个要素有相对比较稳定的关系（除了放假、季节性因素影响之外）
2、通过压力测试或者经验预估，得出最高TPS，然后跟进1的关系，计算出系统最高的日吞吐量。B2B中文和淘宝面对的客户群不一样，这两个客户群的网络行为不应用，他们之间的TPS和PV关系比例也不一样。

1、 响应时间
2、 服务器资源使用情况是否合理
3、 应用服务器和数据库资源使用是否合理
4、 系统能否实现扩展
5、 系统最多支持多少用户访问、系统最大业务处理量是多少
6、 系统性能可能存在的瓶颈在哪里
7、 更换那些设备可以提高性能
8、 系统能否支持7×24小时的业务访问

26292327   总查询数
300            压测持续时间


响应时间：
 0.0002     平均响应时间
0.015       最大响应时间

有效请求
 Percentage completed: 100.00%
  Percentage lost:        0.00%

 Parse input file:     multiple times
  Run time limit:       300 seconds
  Ran through file:     52 times
反复 seek  请求

cpu使用率    80%

CPU总核数 = 物理CPU个数 * 每颗物理CPU的核数
总逻辑CPU数 = 物理CPU个数 * 每颗物理CPU的核数 * 超线程数
1颗物理CPU，双核4线程；


load average: 3.22, 3.27, 2.52
Tasks: 105 total,   2 running, 103 sleeping,   0 stopped,   0 zombie
%Cpu(s): 42.6 us, 35.2 sy
KiB Mem :  8008264 total,   128152 free,   786552



top
 load average: 2.55, 2.85, 2.02
 
 %Cpu0  : 48.0 us, 31.8 sy,  0.0 ni, 16.6 id,  0.0 wa,  0.0 hi,  3.7 si,  0.0 st
%Cpu1  : 46.5 us, 33.7 sy,  0.0 ni, 16.5 id,  0.0 wa,  0.0 hi,  3.4 si,  0.0 st
%Cpu2  : 43.4 us, 33.9 sy,  0.0 ni, 20.0 id,  0.0 wa,  0.0 hi,  2.7 si,  0.0 st
%Cpu3  : 43.1 us, 37.3 sy,  0.0 ni, 11.5 id,  0.0 wa,  0.0 hi,  8.1 si,  0.0 st
KiB Mem :  8008264 total,   126704 free,   704372 used,  7177188 buff/cache
KiB Swap:        0 total,        0 free,        0 used.  6988080 avail Mem 

  PID USER      PR  NI    VIRT    RES    SHR S  %CPU %MEM     TIME+ COMMAND                                                                              
30734 named     20   0  542648 215268   1720 S 267.4  2.7 281:24.10 named       

 
在top页面按1   看具体core的cpu情况
通过上面的显示我们发现Cpu(s)表示的是 所有用户进程占用整个cpu的平均值，由于每个核心占用的百分比不同，所以按平均值来算比较有参考意义。
而%CPU显示的是进程占用一个核的百分比，而不是整个cpu（12核）的百分比，有时候可能大于100，那是因为该进程启用了多线程占用了多个核心，
所以有时候我们看该值得时候会超过100%，但不会超过总核数*100。


CPU 相关监控项
us：用户空间占用CPU百分比（Host.cpu.user）
sy：内核空间占用CPU百分比（Host.cpu.system）
ni：用户进程空间内改变过优先级的进程占用CPU百分比
id：空闲CPU百分比（Host.cpu.idle）
wa：等待输入输出的CPU时间百分比
hi：硬件中断
si：软件中断
st：实时
监控项名称	监控项含义	单位	说明
Host.cpu.idle	当前空闲CPU百分比	%	当前CPU处于空闲状态的百分比
Host.cpu.system	当前内核空间占用CPU百分比	%	指系统上下文切换的消耗,该监控项数值比较高，说明服务器开了太多的进程或者线程
Host.cpu.user	当前用户空间占用CPU百分比	%	用户进程对CPU的消耗
Host.cpu.iowait	当前等待IO操作的CPU百分比	%	该项数值比较高说明有很频繁的IO操作
Host.cpu.other	其他占用CPU百分比	%	其他消耗，计算方式为（Nice + SoftIrq + Irq + Stolen）的消耗
Host.cpu.totalUsed	当前消耗的总CPU百分比	%	指以上各项CPU消耗的总和，通常用于报警

测试统计：
Processor Usage - an amount of time processor spends executing non-idle threads.
Memory use - amount of physical memory available to processes on a computer.
Disk time - amount of time disk is busy executing a read or write request.
Bandwidth - shows the bits per second used by a network interface.
Private bytes - number of bytes a process has allocated that can't be shared amongst other processes. These are used to measure memory leaks and usage.
Committed memory - amount of virtual memory used.
Memory pages/second - number of pages written to or read from the disk in order to resolve hard page faults. Hard page faults are when code not from the current working set is called up from elsewhere and retrieved from a disk.
Page faults/second - the overall rate in which fault pages are processed by the processor. This again occurs when a process requires code from outside its working set.
CPU interrupts per second - is the avg. number of hardware interrupts a processor is receiving and processing each second.
Disk queue length - is the avg. no. of read and write requests queued for the selected disk during a sample interval.
Network output queue length - length of the output packet queue in packets. Anything more than two means a delay and bottlenecking needs to be stopped.
Network bytes total per second - rate which bytes are sent and received on the interface including framing characters.
Response time - time from when a user enters a request until the first character of the response is received.
Throughput - rate a computer or network receives requests per second.
Amount of connection pooling - the number of user requests that are met by pooled connections. The more requests met by connections in the pool, the better the performance will be.
Maximum active sessions - the maximum number of sessions that can be active at once.
Hit ratios - This has to do with the number of SQL statements that are handled by cached data instead of expensive I/O operations. This is a good place to start for solving bottlenecking issues.
Hits per second - the no. of hits on a web server during each second of a load test.
Rollback segment - the amount of data that can rollback at any point in time.
Database locks - locking of tables and databases needs to be monitored and carefully tuned.
Top waits - are monitored to determine what wait times can be cut down when dealing with the how fast data is retrieved from memory
Thread counts - An applications health can be measured by the no. of threads that are running and currently active.
Garbage collection - It has to do with returning unused memory back to the system. Garbage collection needs to be monitored for efficiency.



监控网卡流量：
 watch -d 'ifconfig eth0'
 
 统计网络信息：
  netstat -s
 
 iftop  网络流量监控
 
 进程调用栈
 pstack   属于gdb的一部分，如果没命令  yum install gdb 就可以
 pstack 3023423（进程号）
 
 strace 进程号   追踪系统调用
 
 
 tcpdump
 tcpdump -i any(所有网卡) udp port 53 -w tcpdump-bind-output-window-test.pcap（写到这个文件  pcap格式可以被wireshark打开）
 使用命令“tcpdump –i eth0 port 53”来查看DNS查询包，当然也可以把输出重定向到文件，然后使用rndc stats（bind9）来获取
 
 dnstop   dns监控工具
 
-----------------------------------------------------------------------------------------------
使用，nscd（Name Service Cache Daemon）是一种能够缓存 passwd、group、hosts 的本地缓存服务，分别对应三个源 /etc/passwd、/etc/hosts、/etc/resolv.conf。
其最为明显的作用就是加快 DNS 解析速度，在接口调用频繁的内网环境建议开启。

